#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>

sem_t mutex, writeblock;
int data = 0, readcount = 0;

void *reader(void *arg) {
    int f = (int)arg;
    sem_wait(&mutex);
    readcount++;
    if(readcount == 1) {
        sem_wait(&writeblock);
    }
    sem_post(&mutex);
    
    printf("Data read by the reader %d is %d\n", f, data);
    
    sem_wait(&mutex);
    readcount--;
    if(readcount == 0) {
        sem_post(&writeblock);
    }
    sem_post(&mutex);
}

void *writer(void *arg) {
    int f = (int)arg;
    sem_wait(&writeblock);
    data++;
    printf("Data written by the writer %d is %d\n", f, data);
    sem_post(&writeblock);
}

int main() {
    pthread_t rtid[5], wtid[5];
    sem_init(&mutex, 0, 1);
    sem_init(&writeblock, 0, 1);
    
    for(int i = 0; i < 5; i++) {
        pthread_create(&wtid[i], NULL, writer, (void *)i);
        pthread_create(&rtid[i], NULL, reader, (void *)i);
    }
    
    for(int i = 0; i < 5; i++) {
        pthread_join(wtid[i], NULL);
        pthread_join(rtid[i], NULL);
    }
    
    return 0;
}
